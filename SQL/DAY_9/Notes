create database operation;
use operation;
create table if not exists course(
course_id int,  
course_name varchar(50),
course_desc varchar(60),
course_tag varchar(50)
);

create table if not exists student(
student_id int ,
student_name varchar(30),
student_mobile int ,
student_course_enroll varchar(30),
student_course_id int 
);

insert into course values(101 , 'fsda' , 'full stack data analytics' , 'Analytics'),
(102 , 'fsds' , 'full stack data analytics' , 'Analytics'),
(103 , 'fsds' , 'full stack data science' , 'DS'),
(104 , 'big data' , 'full stack big data' , 'BD'),
(105 , 'mern' , 'web dev' , 'mern'),
(106 , 'blockchain' , 'full stack blockchain' , 'BC'),
(101 , 'java' , 'full stack java' , 'java'),
(102 , 'testing' , 'full testing ' , 'testing '),
(105 , 'cybersecurity' , 'full stack cybersecurity' , 'cybersecurity'),
(109 , 'c' , 'c language' , 'c'),
(108 , 'c++' , 'C++ language' , 'language');

insert into student values(301 , "sudhanshu", 3543453,'yes', 101),
(302 , "sudhanshu", 3543453,'yes', 102),
(301 , "sudhanshu", 3543453,'yes', 105),
(302 , "sudhanshu", 3543453,'yes', 106),
(303 , "sudhanshu", 3543453,'yes', 101),
(304 , "sudhanshu", 3543453,'yes', 103),
(305 , "sudhanshu", 3543453,'yes', 105),
(306 , "sudhanshu", 3543453,'yes', 107),
(306 , "sudhanshu", 3543453,'yes', 103);

select * from course;
select * from student;

select c.course_id, c.course_name, c.course_desc, s.student_id, s.student_name, s.student_course_id 
from course c inner join student s on c.course_id = s.student_course_id;

select c.course_id, c.course_name, c.course_desc, s.student_id, s.student_name, s.student_course_id 
from course c left join student s on c.course_id = s.student_course_id; 

select c.course_id, c.course_name, c.course_desc, s.student_id, s.student_name, s.student_course_id 
from course c right join student s on c.course_id = s.student_course_id;

select c.course_id, c.course_name, c.course_desc, s.student_id, s.student_name, s.student_course_id 
from course c cross join student s on c.course_id = s.student_course_id;

select course_id , course_name from course
union all
select student_id , student_name from student;

with sample_students as(
select * from course where course_id in (101, 102, 103))
select * from sample_students where course_tag = 'java';

with sample_join as (
(select c.course_id , c.course_name , c.course_desc ,s.student_id,s.student_name ,s.student_course_id from course c
cross  join student s ))
 select course_id , course_name ,student_id from sample_join where student_id = 301;

with recursive cte(n) as(
select 1 
union all
select n + 1 as b from cte where n<5)
select * from cte;

with recursive cte as(
select 1 as p, 1 as q, -1 as r 
union all 
select p+1, q+2, r+3 from cte where p < 5)
select * from cte