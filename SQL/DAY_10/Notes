create database ineuron;
use ineuron;
create table course(
course_id int , 
course_desc varchar(50),
course_mentor varchar(60),
course_price int ,
course_discount int,
create_date date,
user_info varchar(50));

create table course_update(
course_metor_update varchar(50),
course_price_update int ,
course_discount_update int);


create table ref_course (
record_insert_date date,
record_insert_user varchar(50)
)


delimiter //
create trigger course_before_insert
before insert
on course for each row
begin
	declare user_val varchar(50);
	set new.create_date = sysdate();
	select user() into user_val;
	set new.user_info = user_val;
end;//

select * from course;
insert into course (course_id,course_desc,course_mentor,course_price,course_discount)
value(101,"FSDA","sudhanshu",4000,10);
insert into course (course_id,course_desc,course_mentor,course_price,course_discount)
value(102,"FSDS","durgesh",4000,10);

delimiter //
create trigger course_after_insert
after insert
on course for each row
begin
	declare user_val varchar(50);
	select user() into user_val;
    insert into ref_course values(sysdate(), user_val);
end;//

select * from ref_course;

create table test1(
c1 varchar(50),
c2 date,
c3 int)

create table test2(
c1 varchar(50),
c2 date,
c3 int )

create table test3(
c1 varchar(50),
c2 date,
c3 int )

delimiter //
create trigger to_updates_others
after insert on test1  for each row
begin
insert into test2 values("xyz", sysdate(), 23567);
insert into test3 values("xyz", sysdate(), 23567);
end;// 

delimiter //
create trigger to_updates_others2
before insert on test1  for each row
begin
update test2 set c1 = 'abc' where c1 = 'xyz';
delete from test3 where c1 = 'xyz';
end;// 

select * from test1;
select * from test2;
select * from test3;
SET SQL_SAFE_UPDATES = 0;
insert into test1 values ("xyz",sysdate(),234234);

delimiter //
create trigger to_delete_others_before
before delete on test1 for each row 
begin
	insert into test3 values("after delete" , sysdate(), 435456);
end; //


delimiter //
create trigger to_delete_others_before_observation2
before delete on test1 for each row 
begin
	insert into test2(c1,c2,c3) values(old.c1, old.c2,old.c3);
end; //



select * from test1
select * from test2

delete from test1 where c1 = 'abc'


create table test11(
c1 varchar(50),
c2 date,
c3 int)


create table test12(
c1 varchar(50),
c2 date,
c3 int )


create table test13(
c1 varchar(50),
c2 date,
c3 int )

delimiter //
create trigger to_delete_others_before_observation3
before delete on test11 for each row 
begin
	insert into test12(c1,c2,c3) values(old.c1, old.c2,old.c3);
end; //



insert into test11 values("sudh" , sysdate(), 435456);
select * from test11

delete from test11 where c1 = 'sudh'

select * from test12


delimiter //
create trigger to_delete_others_before_observation4
after delete on test11 for each row 
begin
	insert into test12(c1,c2,c3) values(old.c1, old.c2,old.c3);
end; //

delete from test11 where c1 = 'sudhanshu'


delimiter //
create trigger to_upate_others
after update on test11 for each row 
begin
	insert into test12(c1,c2,c3) values(old.c1, old.c2,old.c3);
end; //

select * from test11;

insert into test11 values("sudh",sysdate(),234354)

update test11 set c1 = "after update" where c1 = "after delete"


select * from  test12;

delimiter //
create trigger to_upate_others_before
before update on test11 for each row 
begin
	insert into test12(c1,c2,c3) values(new.c1, new.c2,new.c3);
end; //

update test11 set c1 = "insert new" where c1 = "sudh"


show databases;
use ineuron_partition;
select * from ineuron_course;

select *, 
case 
	when ourse_name = 'fsda' then 'Exists'
	when ourse_name = 'fsds' then 'Exists'
	else 'Not Exists'
end as statement
from ineuron_course;

update ineuron_course set ourse_name = 
case
	when ourse_name = 'RL' then 'reinforcement learing'
    when ourse_name = 'dl' then 'deep learing'
    else 'Hai Kuch na Kuch'
end;
